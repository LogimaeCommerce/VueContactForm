{"remainingRequest":"/Users/dutyuzh/Sites/dashautyuzh.io/node_modules/babel-loader/lib/index.js!/Users/dutyuzh/Sites/dashautyuzh.io/node_modules/eslint-loader/index.js??ref--13-0!/Users/dutyuzh/Sites/dashautyuzh.io/src/plugins/device-queries/match-media.js","dependencies":[{"path":"/Users/dutyuzh/Sites/dashautyuzh.io/src/plugins/device-queries/match-media.js","mtime":1534793018000},{"path":"/Users/dutyuzh/Sites/dashautyuzh.io/node_modules/cache-loader/dist/cjs.js","mtime":1530108614324},{"path":"/Users/dutyuzh/Sites/dashautyuzh.io/node_modules/babel-loader/lib/index.js","mtime":1529635966000},{"path":"/Users/dutyuzh/Sites/dashautyuzh.io/node_modules/eslint-loader/index.js","mtime":1499322156000}],"contextDependencies":[],"result":["import _objectSpread from \"/Users/dutyuzh/Sites/dashautyuzh.io/node_modules/@babel/runtime/helpers/builtin/es6/objectSpread\";\nimport \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.split\";\nimport _slicedToArray from \"/Users/dutyuzh/Sites/dashautyuzh.io/node_modules/@babel/runtime/helpers/builtin/es6/slicedToArray\";\n\nvar matchMediaFallback = function matchMediaFallback() {\n  var listeners = [];\n  var idle = true;\n\n  var device = function () {\n    var node = document.createElement('div');\n    var style = document.createElement('style');\n    node.id = 'match-media-node';\n    style.innerHTML = \"#match-media-node {\\n      width: 100%;\\n      height: 100%;\\n      position: absolute;\\n      bottom: 100%;\\n      overflow: scroll;\\n    }\";\n    document.head.appendChild(style);\n    document.body.insertBefore(node, document.body.children[0]);\n    return {\n      get width() {\n        return node.clientWidth;\n      },\n\n      get height() {\n        return node.clientHeight;\n      },\n\n      get orientation() {\n        return node.clientHeight > node.clientWidth ? 'portrait' : 'landscape';\n      },\n\n      get fontSize() {\n        return window.getComputedStyle(document.documentElement).getPropertyValue('font-size');\n      }\n\n    };\n  }();\n\n  var createHandler = function createHandler(feature, value) {\n    if (feature === 'orientation') {\n      return function () {\n        return value === device.orientation;\n      };\n    }\n\n    var _feature$split$revers = feature.split('-').reverse(),\n        _feature$split$revers2 = _slicedToArray(_feature$split$revers, 2),\n        prop = _feature$split$revers2[0],\n        limit = _feature$split$revers2[1];\n\n    var operand = !limit ? '==' : limit === 'min' ? '<' : '>';\n\n    var parseValue = function () {\n      return ~value.indexOf('em') ? function () {\n        return parseFloat(value) * device.fontSize;\n      } : function () {\n        return parseFloat(value);\n      };\n    }();\n\n    var handlers = {\n      'width': function width() {\n        return eval(parseValue() + operand + device.width);\n      },\n      'height': function height() {\n        return eval(parseValue() + operand + device.height);\n      }\n    };\n    return handlers[prop];\n  };\n\n  var parseQuery = function parseQuery(queryString) {\n    var _queryString$replace$ = queryString.replace(/[()\\s]/g, '').split(':'),\n        _queryString$replace$2 = _slicedToArray(_queryString$replace$, 2),\n        feature = _queryString$replace$2[0],\n        value = _queryString$replace$2[1];\n\n    return createHandler(feature, value);\n  };\n\n  window.addEventListener('resize', function () {\n    if (!idle) return;\n    idle = false;\n    var width = device.width;\n    var height = device.height;\n    var timer = setInterval(function () {\n      if (width !== device.width || height !== device.height) {\n        width = device.width;\n        height = device.height;\n      } else {\n        clearTimeout(timer);\n        listeners.forEach(function (handler) {\n          return handler();\n        });\n        idle = true;\n      }\n    }, 100);\n  });\n  return function (queryString) {\n    var query = parseQuery(queryString);\n    var matcher = {\n      get matches() {\n        return query();\n      }\n\n    };\n    return _objectSpread({}, matcher, {\n      addListener: function addListener(cb) {\n        var handler = function handler() {\n          return cb(matcher);\n        };\n\n        listeners.push(handler);\n      }\n    });\n  };\n};\n\nvar matchMedia = window.matchMedia || matchMediaFallback();\nexport { matchMedia as default };",{"version":3,"sources":["src/plugins/device-queries/match-media.js"],"names":["matchMediaFallback","listeners","idle","device","node","document","createElement","style","id","innerHTML","head","appendChild","body","insertBefore","children","width","clientWidth","height","clientHeight","orientation","fontSize","window","getComputedStyle","documentElement","getPropertyValue","createHandler","feature","value","split","reverse","prop","limit","operand","parseValue","indexOf","parseFloat","handlers","eval","parseQuery","queryString","replace","addEventListener","timer","setInterval","clearTimeout","forEach","handler","query","matcher","matches","addListener","cb","push","matchMedia","default"],"mappings":"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","sourceRoot":"/Users/dutyuzh/Sites/dashautyuzh.io","sourcesContent":["const matchMediaFallback = () => {\n  let listeners = []\n  let idle = true\n\n  const device = (() => {\n    let node = document.createElement('div')\n    let style = document.createElement('style')\n\n    node.id = 'match-media-node'\n    style.innerHTML = `#match-media-node {\n      width: 100%;\n      height: 100%;\n      position: absolute;\n      bottom: 100%;\n      overflow: scroll;\n    }`\n\n    document.head.appendChild(style)\n    document.body.insertBefore(node, document.body.children[0])\n\n    return {\n      get width() {\n        return node.clientWidth\n      },\n      get height() {\n        return node.clientHeight\n      },\n      get orientation() {\n        return (node.clientHeight > node.clientWidth)\n          ? 'portrait'\n          : 'landscape'\n      },\n      get fontSize() {\n        return window\n          .getComputedStyle(document.documentElement)\n          .getPropertyValue('font-size')\n      }\n    }\n  })()\n\n  const createHandler = (feature, value) => {\n    if (feature === 'orientation') {\n      return () => value === device.orientation\n    }\n\n    let [prop, limit] = feature\n      .split('-')\n      .reverse()\n\n    const operand = (!limit) ? '=='\n      : (limit === 'min') ? '<'\n      : '>'\n\n    const parseValue = (() => {\n      return (~value.indexOf('em'))\n        ? () => parseFloat(value) * device.fontSize\n        : () => parseFloat(value)\n    })()\n\n    const handlers = {\n      'width': () => eval(parseValue() + operand + device.width),\n      'height': () => eval(parseValue() + operand + device.height)\n    }\n\n    return handlers[prop]\n  }\n\n  const parseQuery = (queryString) => {\n    let [feature, value] = queryString.replace(/[()\\s]/g, '').split(':')\n    return createHandler(feature, value)\n  }\n\n  window.addEventListener('resize', () => {\n    if (!idle) return;\n    idle = false\n\n    let width = device.width\n    let height = device.height\n\n    let timer = setInterval(() => {\n      if (width !== device.width || height !== device.height) {\n        width = device.width\n        height = device.height\n      } else {\n        clearTimeout(timer)\n        listeners.forEach(handler => handler())\n        idle = true\n      }\n    }, 100)\n  })\n\n  return (queryString) => {\n    const query = parseQuery(queryString)\n    const matcher = {\n      get matches() {\n        return query()\n      }\n    }\n\n    return {\n      ...matcher,\n      addListener(cb) {\n        const handler = () => cb(matcher)\n        listeners.push(handler)\n      }\n    }\n  }\n}\n\nconst matchMedia = window.matchMedia || matchMediaFallback()\n\nexport { matchMedia as default }\n"]}]}